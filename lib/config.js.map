{"version":3,"sources":["../src/config.ts"],"names":[],"mappings":";AACA;AACA,0D;;;;;;AAMO,IAAI,GAAG,GAAG,UAAS;AACxB,EAAA,GADwB,EAAT;;;AAIO;AACtB,MAAI,MAAM,GAAG,GAAG,CAAC,UAAjB;;AAEA;AACA,SAAO;AACL,IAAA,MADK;AAEL,IAAA,MAAM,EAAE;AACN,MAAA,GAAG,EAAE,UAAS,GAAG,QAAZ,EAAsB;AACzB;AACA,6BAAO,QAAQ,CAAC,CAAD,CAAf;AACA,YAAI,QAAQ,CAAC,MAAT,GAAkB,CAAtB,EAAyB;AACvB,gBAAM,IAAI,KAAJ,CAAW,iCAAgC,QAAQ,CAAC,MAAO,+BAA3D,CAAN;AACD;AACF,OAPK,EAFH,EAAP;;;AAYD,CApBM,C;;AAsBA,IAAI,OAAO,GAAG,YAAI,EAAC,GAAG,EAAH,YAAD,EAAJ,CAAd,C","file":"config.js","sourcesContent":["import aws from 'aws-sdk';\nimport env from './env';\nimport logger from './logger';\n\nimport {\n  Env\n} from './types';\n\nexport let get = function({\n  env\n}: {\n  env: Env;\n}): Partial<aws.Config> {\n  let region = env.AWS_REGION;\n\n  // TODO should probably handle credentials, etc.\n  return {\n    region,\n    logger: {\n      log: function(...messages) {\n        // ignore the rest, aws-sdk-js only calls with one argument: awsSdkMessage\n        logger(messages[0]);\n        if (messages.length > 1) {\n          throw new Error(`aws-sdk-js logger called with ${messages.length} arguments instead of just 1.`);\n        }\n      }\n    }\n  };\n};\n\nexport let current = get({env});\n"]}