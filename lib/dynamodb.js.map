{"version":3,"sources":["../src/dynamodb.js"],"names":[],"mappings":"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","file":"dynamodb.js","sourcesContent":["import _ from 'lodash-firecloud';\nimport aws from 'aws-sdk';\n\nexport let getDefaultTotalSegments = async function(TableName) {\n  let db = new aws.DynamoDB();\n  let {\n    Table\n  } = await db.describeTable({TableName}).promise();\n\n  let TwoGigabytesInBytes = 2 * 1024 * 1024 * 1024;\n  return Math.floor(Table.TableSizeBytes / TwoGigabytesInBytes) + 1;\n};\n\nexport let scanWithBackticks = function(args) {\n  if (!args.FilterExpression) {\n    return args;\n  }\n\n  args.ExpressionAttributeNames = _.defaultTo(args.ExpressionAttributeNames, {});\n  args.FilterExpression = _.replace(args.FilterExpression, /`([^`]+)`/g, function(_match, attrs) {\n    attrs = _.split(attrs, '.');\n    attrs = _.map(attrs, function(attr) {\n      attr = _.replace(attr, /^#/, '');\n      let safeAttr = _.replace(attr, /[^A-Za-z0-9]/g, '_');\n      safeAttr = `#${safeAttr}`;\n      // FIXME should I even bother checking if this is a reserved word\n      args.ExpressionAttributeNames[safeAttr] = attr;\n      return safeAttr;\n    });\n    attrs = attrs.join('.');\n    return attrs;\n  });\n  return args;\n};\n\nexport let dcScan = async function(args, iteratee) {\n  let dc = new aws.DynamoDB.DocumentClient();\n\n  args = scanWithBackticks(args);\n  // NOTE: we disable parallel scanning for now\n  // until we reach >2GB dynamodb tables\n  // args.TotalSegments =\n  //   _.defaultTo(args.TotalSegments,\n  //   await getDefaultTotalSegments(args.TableName));\n  args.TotalSegments = 1;\n  args.TotalSegments = _.max([\n    1,\n    args.TotalSegments\n  ]);\n\n  if (args.Limit) {\n    args.Limit = _.ceil(args.Limit / args.TotalSegments);\n  }\n\n  let continueScan = true;\n  let results = [];\n  let limit;\n\n  let scan = async function() {\n    await Promise.all(_.map(_.range(0, args.TotalSegments), async function(Segment) {\n      let iteratorArgs = _.cloneDeep(args);\n      iteratorArgs.Segment = Segment;\n\n      if (results[Segment]) {\n        iteratorArgs.ExclusiveStartKey = results[Segment].LastEvaluatedKey;\n      }\n      results[Segment] = await dc.scan(iteratorArgs).promise();\n    }));\n\n    _.forEach(results, function(result) {\n      let cbResult = _.defaultTo(iteratee(result), true);\n\n      if (_.isBoolean(cbResult)) {\n        cbResult = {\n          continueScan: cbResult\n        };\n      }\n\n      limit = _.get(cbResult, 'args.Limit');\n      continueScan =\n        cbResult.continueScan !== false &&\n        _.isDefined(result.LastEvaluatedKey);\n\n      return continueScan;\n    });\n\n    if (!continueScan) {\n      return;\n    }\n\n    if (limit) {\n      args.Limit = _.ceil(limit / args.TotalSegments);\n    }\n\n    await scan();\n  };\n\n  await scan();\n};\n\nexport let dcPut = async function(args) {\n  let dc = new aws.DynamoDB.DocumentClient();\n\n  args.Item = _.mapValuesDeep(_.pickBy)(args.Item, function(value) {\n    return _.isDefined(value) && value !== '';\n  });\n\n  return await dc.put(args).promise();\n};\n\nexport default exports;\n"]}