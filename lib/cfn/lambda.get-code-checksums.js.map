{"version":3,"sources":["../../src/cfn/lambda.get-code-checksums.js"],"names":[],"mappings":"+HAAA;AACA;;AAEA,mC;;;;AAIO,IAAI,gBAAgB,GAAG,gBAAe;AAC3C,EAAA,IAD2C;AAE3C,EAAA,SAAS,GAAG,QAF+B;AAG3C,EAAA,GAH2C,EAAf;AAI3B;AACD,MAAI,EAAE,GAAG,IAAI,gBAAI,EAAR,CAAW,iBAAU,EAAC,GAAD,EAAV,CAAX,CAAT;;AAEA,MAAI,MAAM,GAAG,IAAI,CAAC,QAAlB;AACA,MAAI,GAAG,GAAI,GAAE,IAAI,CAAC,KAAM,IAAG,SAAU,KAArC;;AAEA,MAAI,aAAJ;AACA,MAAI;AACF,IAAA,aAAa,4CAAG,MAAM,EAAE,CAAC,SAAH,CAAa;AACjC,UAAA,MADiC;AAEjC,UAAA,GAFiC,EAAb;AAGnB,QAAA,OAHmB,EAAT,4IAAb;AAID,GALD,CAKE,OAAO,GAAP,EAAY;AACZ;AACA,IAAA,OAAO,CAAC,IAAR,CAAa,GAAb,EAAkB;AAChB,MAAA,MADgB;AAEhB,MAAA,GAFgB,EAAlB;;AAIA,WAAO,EAAP;AACD;;AAED,MAAI;AACF,IAAA,IADE;AAEA,EAAA,aAFJ;AAGA,EAAA,IAAI,GAAG,IAAI,CAAC,QAAL,EAAP;;AAEA,MAAI,SAAS,GAAG,EAAhB;AACA,2BAAE,OAAF,CAAU,yBAAE,KAAF,CAAQ,yBAAE,IAAF,CAAO,IAAP,CAAR,EAAsB,IAAtB,CAAV,EAAuC,UAAS,IAAT,EAAe;AACpD,QAAI;AACF,IAAA,QADE;AAEF,IAAA,QAFE;AAGA,6BAAE,KAAF,CAAQ,IAAR,EAAc,IAAd,CAHJ;AAIA,IAAA,SAAS,CAAC,QAAD,CAAT,GAAsB,QAAtB;AACD,GAND;;AAQA,MAAI,QAAQ,GAAG,yBAAE,IAAF,CAAO,yBAAE,KAAF,CAAQ,IAAI,CAAC,KAAb,EAAoB,GAApB,CAAP,CAAf;;AAEA,SAAO;AACL,EAAA,SAAS,CAAE,GAAE,QAAS,OAAb,CADJ;AAEL,EAAA,SAAS,CAAE,QAAO,QAAS,OAAlB,CAFJ,CAAP;;AAID,CA7CM,C","file":"lambda.get-code-checksums.js","sourcesContent":["import _ from 'lodash-firecloud';\nimport aws from 'aws-sdk';\n\nimport {\n  get as getConfig\n} from '../config';\n\nexport let getCodeChecksums = async function({\n  Code,\n  algorithm = 'sha256',\n  env\n}) {\n  let s3 = new aws.S3(getConfig({env}));\n\n  let Bucket = Code.S3Bucket;\n  let Key = `${Code.S3Key}.${algorithm}sum`;\n\n  let getObjectResp;\n  try {\n    getObjectResp = await s3.getObject({\n      Bucket,\n      Key\n    }).promise();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn(err, {\n      Bucket,\n      Key\n    });\n    return [];\n  }\n\n  let {\n    Body\n  } = getObjectResp;\n  Body = Body.toString();\n\n  let checksums = {};\n  _.forEach(_.split(_.trim(Body), '\\n'), function(line) {\n    let [\n      checksum,\n      filename\n    ] = _.split(line, '  ');\n    checksums[filename] = checksum;\n  });\n\n  let filename = _.last(_.split(Code.S3Key, '/'));\n\n  return [\n    checksums[`${filename}.info`],\n    checksums[`core.${filename}.info`]\n  ];\n};\n\nexport default getCodeChecksums;\n"]}