{"version":3,"sources":["../../src/cfn/iam.js"],"names":[],"mappings":"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","file":"iam.js","sourcesContent":["import AWS_ACCOUNT from '../account';\nimport _ from 'lodash-firecloud';\nimport aws from 'aws-sdk';\n\nimport {\n  getOutputBucketName as getAthenaOutputBucketName\n} from '../athena';\n\nimport {\n  get as getConfig\n} from '../config';\n\n// workaround for AWS's limit of 10 Managed Policies per Group\n// ref http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-limits.html\nexport let addStatementFromArns = async function({\n  Statement,\n  arns,\n  env\n}) {\n  let iam = new aws.IAM(getConfig({env}));\n\n  let arnStatement = await Promise.all(_.map(arns, async function(PolicyArn) {\n    let {Policy} = await iam.getPolicy({\n      PolicyArn\n    }).promise();\n    let {PolicyVersion} = await iam.getPolicyVersion({\n      PolicyArn,\n      VersionId: Policy.DefaultVersionId\n    }).promise();\n    let stmts = JSON.parse(unescape(PolicyVersion.Document)).Statement;\n    stmts = _.map(stmts, function(stmt, index) {\n      if (stmts.length === 0) {\n        index = '';\n      }\n      stmt = _.merge({\n        Sid: _.defaultTo(\n          stmt.Sid,\n          // `${Policy.PolicyName}${PolicyVersion.VersionId}${index + 1}`\n          `${index + 1}${PolicyVersion.VersionId}${Policy.PolicyName}`\n        )\n      }, stmt);\n      return stmt;\n    });\n    return stmts;\n  }));\n\n  arnStatement = _.flatten(arnStatement);\n\n  return Statement.concat(arnStatement);\n};\n\nexport let compactStatement = function({Statement}) {\n  let map = {};\n  _.forEach(Statement, function(stmt) {\n    stmt.Resource = _.isArray(stmt.Resource) ? stmt.Resource : [stmt.Resource];\n    let key = JSON.stringify([\n      stmt.Effect,\n      stmt.Principal,\n      stmt.Resource,\n      stmt.Condition\n    ]);\n    map[key] = map[key] || [];\n    map[key].push(stmt);\n  });\n  let cStatement = _.map(map, function(stmts) {\n    let {\n      Effect,\n      Principal,\n      Resource,\n      Condition\n    } = stmts[0];\n    let Action = _.sortBy(_.uniq(_.flatten(_.map(stmts, function(stmt) {\n      return _.isArray(stmt.Action) ? stmt.Action : [stmt.Action];\n    }))));\n    return {\n      Effect,\n      Principal,\n      Action,\n      Resource,\n      Condition\n    };\n  });\n  _.forEach(cStatement, function(stmt) {\n    let wActions = _.filter(stmt.Action, /\\*$/);\n    _.forEach(wActions, function(wAction) {\n      let prefix = _.replace(wAction, /\\*$/, '');\n      _.remove(stmt.Action, function(action) {\n        return (action !== wAction && _.startsWith(action, prefix));\n      });\n    });\n  });\n  return cStatement;\n};\n\nexport let allowFullAccessToDynamoDbTable = function({\n  TableName,\n  env\n}) {\n  return {\n    Sid: `Allow full access to ${TableName} database`,\n    Effect: 'Allow',\n    Action: [\n      'dynamodb:*'\n    ],\n    Resource: [\n      `arn:aws:dynamodb:${env.AWS_REGION}:${AWS_ACCOUNT.ID}:table/${TableName}`,\n      `arn:aws:dynamodb:${env.AWS_REGION}:${AWS_ACCOUNT.ID}:table/${TableName}/index/*`\n    ]\n  };\n};\n\nexport let allowFullAccessToKinesisStream = function({\n  StreamName,\n  env\n}) {\n  return {\n    Sid: `Allow full access to ${StreamName} stream`,\n    Effect: 'Allow',\n    Action: [\n      'kinesis:*'\n    ],\n    Resource: [\n      `arn:aws:kinesis:${env.AWS_REGION}:${AWS_ACCOUNT.ID}:stream/${StreamName}`\n    ]\n  };\n};\n\nexport let allowQueryAccessToAthena = function({\n  _env\n} = {}) {\n  return {\n    Sid: `Allow query access to Athena`,\n    Effect: 'Allow',\n    Action: [\n      'athena:GetQueryExecution',\n      'athena:GetQueryResults',\n      'athena:StartQueryExecution'\n    ],\n    Resource: [\n      '*'\n    ]\n  };\n};\n\nexport let allowAccessToAthenaOutputBucket = function({\n  region,\n  BucketName,\n  env\n}) {\n  BucketName =\n    _.defaultTo(BucketName, getAthenaOutputBucketName({env, region}));\n\n  return {\n    Sid: `Allow access to ${BucketName} (Athena output) bucket`,\n    Effect: 'Allow',\n    Action: [\n      's3:GetObject',\n      's3:PutObject',\n      's3:GetBucketLocation'\n    ],\n    Resource: [\n      `arn:aws:s3:::${BucketName}`,\n      `arn:aws:s3:::${BucketName}/*`\n    ]\n  };\n};\n"]}