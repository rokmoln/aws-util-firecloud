{"version":3,"sources":["../../src/cfn/iam.ts"],"names":[],"mappings":"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","file":"iam.js","sourcesContent":["import AWS_ACCOUNT from '../account';\nimport _ from 'lodash-firecloud';\nimport aws from 'aws-sdk';\n\nimport {\n  getOutputBucketName as getAthenaOutputBucketName\n} from '../athena';\n\nimport {\n  get as getConfig\n} from '../config';\n\nimport {\n  Env\n} from '../types';\n\n// workaround for AWS's limit of 10 Managed Policies per Group\n// ref http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-limits.html\nexport let addStatementFromArns = async function({\n  Statement,\n  arns,\n  env\n}) {\n  let iam = new aws.IAM(getConfig({env}));\n\n  let arnStatement = await Promise.all(_.map(arns, async function(PolicyArn) {\n    let {\n      Policy\n    } = await iam.getPolicy({\n      PolicyArn\n    }).promise();\n    let {\n      PolicyVersion\n    } = await iam.getPolicyVersion({\n      PolicyArn,\n      VersionId: Policy.DefaultVersionId\n    }).promise();\n    let stmts = JSON.parse(unescape(PolicyVersion.Document)).Statement;\n    stmts = _.map(stmts, function(stmt, index: number) {\n      let indexPrefix = _.toString(index + 1);\n      if (stmts.length === 0) {\n        indexPrefix = '';\n      }\n      stmt = _.merge({\n        Sid: _.defaultTo(\n          stmt.Sid,\n          // `${Policy.PolicyName}${PolicyVersion.VersionId}${index}`\n          `${indexPrefix}${PolicyVersion.VersionId}${Policy.PolicyName}`\n        )\n      }, stmt);\n      return stmt;\n    });\n    return stmts;\n  }));\n\n  arnStatement = _.flatten(arnStatement);\n\n  return Statement.concat(arnStatement);\n};\n\nexport let compactStatement = function({Statement}) {\n  let map = {};\n  _.forEach(Statement, function(stmt) {\n    stmt.Resource = _.isArray(stmt.Resource) ? stmt.Resource : [\n      stmt.Resource\n    ];\n    let key = JSON.stringify([\n      stmt.Effect,\n      stmt.Principal,\n      stmt.Resource,\n      stmt.Condition\n    ]);\n    map[key] = _.defaultTo(map[key], []);\n    map[key].push(stmt);\n  });\n  let cStatement = _.map(map, function(stmts) {\n    let {\n      Effect,\n      Principal,\n      Resource,\n      Condition\n    } = stmts[0];\n    let Action = _.sortBy(_.uniq(_.flatten(_.map(stmts, function(stmt: {\n      Action?: unknown;\n    }) {\n      return _.isArray(stmt.Action) ? stmt.Action : [\n        stmt.Action\n      ];\n    }))));\n    return {\n      Effect,\n      Principal,\n      Action,\n      Resource,\n      Condition\n    };\n  });\n  _.forEach(cStatement, function(stmt) {\n    let wActions = _.filter(stmt.Action, function(action) {\n      return _.endsWith(action, '*');\n    });\n    _.forEach(wActions, function(wAction) {\n      let prefix = _.replace(wAction, /\\*$/, '');\n      stmt.Action = _.reject(stmt.Action, function(action) {\n        return (action !== wAction && _.startsWith(action, prefix));\n      });\n    });\n  });\n  return cStatement;\n};\n\nexport let allowFullAccessToDynamoDbTable = function({\n  TableName,\n  env\n}) {\n  return {\n    Sid: `Allow full access to ${TableName} database`,\n    Effect: 'Allow',\n    Action: [\n      'dynamodb:*'\n    ],\n    Resource: [\n      `arn:aws:dynamodb:${env.AWS_REGION}:${AWS_ACCOUNT.ID}:table/${TableName}`,\n      `arn:aws:dynamodb:${env.AWS_REGION}:${AWS_ACCOUNT.ID}:table/${TableName}/index/*`\n    ]\n  };\n};\n\nexport let allowFullAccessToKinesisStream = function({\n  StreamName,\n  env\n}) {\n  return {\n    Sid: `Allow full access to ${StreamName} stream`,\n    Effect: 'Allow',\n    Action: [\n      'kinesis:*'\n    ],\n    Resource: [\n      `arn:aws:kinesis:${env.AWS_REGION}:${AWS_ACCOUNT.ID}:stream/${StreamName}`\n    ]\n  };\n};\n\nexport let allowQueryAccessToAthena = function({\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  env\n}: {\n  env?: Env;\n} = {}) {\n  return {\n    Sid: 'Allow query access to Athena',\n    Effect: 'Allow',\n    Action: [\n      'athena:GetQueryExecution',\n      'athena:GetQueryResults',\n      'athena:StartQueryExecution'\n    ],\n    Resource: [\n      '*'\n    ]\n  };\n};\n\nexport let allowAccessToAthenaOutputBucket = function({\n  region,\n  BucketName,\n  env\n}) {\n  BucketName =\n    _.defaultTo(BucketName, getAthenaOutputBucketName({env, region}));\n\n  return {\n    Sid: `Allow access to ${BucketName} (Athena output) bucket`,\n    Effect: 'Allow',\n    Action: [\n      's3:GetObject',\n      's3:PutObject',\n      's3:GetBucketLocation'\n    ],\n    Resource: [\n      `arn:aws:s3:::${BucketName}`,\n      `arn:aws:s3:::${BucketName}/*`\n    ]\n  };\n};\n"]}