{"version":3,"sources":["../../src/cfn/api-gateway.ts"],"names":[],"mappings":"mLAAA,2E;;AAEO,IAAI,qBAAqB,GAAG,UAAS;AAC1C,EAAA,QAD0C;AAE1C,EAAA,SAF0C;AAG1C,EAAA,SAH0C;AAI1C,EAAA,QAJ0C;AAK1C,EAAA,kBAL0C,EAAT;AAMhC;AACD,MAAI,eAAe,GAAI,YAAW;AAChC,QAAI,oBAAoB,GAAG,yBAAE,OAAF,CAAU,QAAV,EAAoB,SAApB,EAA+B,EAA/B,CAA3B;AACA,WAAO,yBAAE,KAAF,CAAQ,oBAAR,EAA8B,GAA9B,CAAP;AACD,GAHqB,EAAtB;AAIA,MAAI,MAAM,GAAG,EAAb;AACA,MAAI,YAAJ;AACA,2BAAE,OAAF,CAAU,eAAV,EAA2B,UAAS,cAAT,EAAyB;AAClD,IAAA,MAAM,GAAI,GAAE,MAAO,GAAE,+BAAuB,cAAvB,CAAuC,EAA5D;AACA,IAAA,YAAY,GAAI,GAAE,kBAAmB,GAAE,MAAO,UAA9C;;AAEA,IAAA,SAAS,CAAC,YAAD,CAAT,GAA0B;AACxB,MAAA,IAAI,EAAE,2BADkB;AAExB,MAAA,UAAU,EAAE;AACV,QAAA,QADU;AAEV,QAAA,QAAQ,EAAE,cAFA;AAGV,QAAA,SAHU,EAFY,EAA1B;;;AAQA,IAAA,QAAQ,GAAG;AACT,MAAA,GAAG,EAAE,YADI,EAAX;;AAGD,GAfD;;AAiBA,SAAO,YAAP;AACD,CA/BM,C;;AAiCA,IAAI,sBAAsB,GAAG,UAAS,QAAT,EAAmB;AACrD,SAAO,yBAAE,UAAF,CAAa,yBAAE,SAAF,CAAY,QAAZ,CAAb,CAAP;AACD,CAFM,C;;AAIA,IAAI,qBAAqB,GAAG,UAAS;AAC1C,EAAA,MAD0C;AAE1C,EAAA,OAF0C,EAAT;AAGhC;AACD,2BAAE,YAAF,CAAe,MAAf,EAAuB;AACrB,IAAA,UAAU,EAAE;AACV,MAAA,WAAW,EAAE;AACX,QAAA,iBAAiB,EAAE,EADR,EADH;;AAIV,MAAA,iBAAiB,EAAE,EAJT,EADS,EAAvB;;;;AASA,MAAI,SAAS,GAAG,MAAM,CAAC,UAAP,CAAkB,iBAAlC;AACA,MAAI,oBAAoB,GAAG,MAAM,CAAC,UAAP,CAAkB,WAAlB,CAA8B,iBAAzD;;AAEA,2BAAE,OAAF,CAAU,OAAV,EAAmB,UAAS,MAAT,EAAiB;AAClC,QAAI,eAAe,GAAI,yBAAwB,MAAO,EAAtD;AACA,QAAI,oBAAoB,GAAI,wCAAuC,MAAO,EAA1E;;AAEA,IAAA,SAAS,CAAC,eAAD,CAAT,GAA6B,KAA7B;AACA,IAAA,oBAAoB,CAAC,oBAAD,CAApB,GAA6C,eAA7C;AACD,GAND;AAOD,CAvBM,C","file":"api-gateway.js","sourcesContent":["import _ from 'lodash-firecloud';\n\nexport let addNestedApiResources = function({\n  ParentId,\n  Resources,\n  RestApiId,\n  location,\n  resourceNamePrefix\n}) {\n  let nestedPathParts = (function() {\n    let slashTrimmedLocation = _.replace(location, /^\\/|\\/$/, '');\n    return _.split(slashTrimmedLocation, '/');\n  })();\n  let suffix = '';\n  let resourceName;\n  _.forEach(nestedPathParts, function(nestedPathPart) {\n    suffix = `${suffix}${pathPartToResourceName(nestedPathPart)}`;\n    resourceName = `${resourceNamePrefix}${suffix}Resource`;\n\n    Resources[resourceName] = {\n      Type: 'AWS::ApiGateway::Resource',\n      Properties: {\n        ParentId,\n        PathPart: nestedPathPart,\n        RestApiId\n      }\n    };\n    ParentId = {\n      Ref: resourceName\n    };\n  });\n\n  return resourceName;\n};\n\nexport let pathPartToResourceName = function(pathPart) {\n  return _.upperFirst(_.camelCase(pathPart));\n};\n\nexport let xForwardMethodHeaders = function({\n  Method,\n  headers\n}) {\n  _.defaultsDeep(Method, {\n    Properties: {\n      Integration: {\n        RequestParameters: {}\n      },\n      RequestParameters: {}\n    }\n  });\n\n  let reqParams = Method.Properties.RequestParameters;\n  let integrationReqParams = Method.Properties.Integration.RequestParameters;\n\n  _.forEach(headers, function(header) {\n    let methodReqHeader = `method.request.header.${header}`;\n    let integrationReqHeader = `integration.request.header.X-Forward-${header}`;\n\n    reqParams[methodReqHeader] = false;\n    integrationReqParams[integrationReqHeader] = methodReqHeader;\n  });\n};\n"]}