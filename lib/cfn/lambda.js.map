{"version":3,"sources":["../../src/cfn/lambda.js"],"names":[],"mappings":"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","file":"lambda.js","sourcesContent":["import _ from 'lodash-firecloud';\nimport aws from 'aws-sdk';\nimport path from 'path';\n\nimport {\n  get as getConfig\n} from '../config';\n\nimport {\n  get as getPrincipal\n} from '../principal';\n\nexport let getCodeChecksums = async function({\n  Code,\n  algorithm = 'sha256',\n  env\n}) {\n  let s3 = new aws.S3(getConfig({env}));\n\n  let Bucket = Code.S3Bucket;\n  let Key = `${Code.S3Key}.${algorithm}sum`;\n\n  let getObjectResp;\n  try {\n    getObjectResp = await s3.getObject({\n      Bucket,\n      Key\n    }).promise();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn(err, {\n      Bucket,\n      Key\n    });\n    return [];\n  }\n\n  let {\n    Body\n  } = getObjectResp;\n  Body = Body.toString();\n\n  let checksums = {};\n  _.forEach(_.split(_.trim(Body), '\\n'), function(line) {\n    let [\n      checksum,\n      filename\n    ] = _.split(line, '  ');\n    checksums[filename] = checksum;\n  });\n\n  let filename = _.last(_.split(Code.S3Key, '/'));\n\n  return [\n    checksums[`${filename}.info`],\n    checksums[`core.${filename}.info`]\n  ];\n};\n\nexport let getCodeChecksumVariables = async function({\n  Code,\n  FunctionName,\n  env,\n  force = false\n}) {\n  let LAMBDA_CODE_S3BUCKET = Code.S3Bucket;\n  let LAMBDA_CODE_S3KEY = Code.S3Key;\n\n  let [\n    LAMBDA_CODE_SHA256SUM,\n    LAMBDA_CODE_SHA256SUM_CORE\n  ] = await getCodeChecksums({\n    env,\n    Code\n  });\n\n  let codeChecksumVariables = {\n    LAMBDA_CODE_SHA256SUM,\n    LAMBDA_CODE_SHA256SUM_CORE,\n    LAMBDA_CODE_S3BUCKET,\n    LAMBDA_CODE_S3KEY\n  };\n\n  if (!LAMBDA_CODE_SHA256SUM_CORE) {\n    return codeChecksumVariables;\n  }\n\n  if (force) {\n    return codeChecksumVariables;\n  }\n\n  let prevEnvironment;\n\n  // check if lambda code is the same as the current version\n  try {\n    let lambda = new aws.Lambda(getConfig({env}));\n    ({\n      Environment: prevEnvironment\n    } = await lambda.getFunctionConfiguration({\n      FunctionName\n    }).promise());\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn(err, {\n      FunctionName\n    });\n    return codeChecksumVariables;\n  }\n\n  if (!prevEnvironment.Variables.LAMBDA_CODE_S3BUCKET ||\n      !prevEnvironment.Variables.LAMBDA_CODE_S3KEY) {\n    return codeChecksumVariables;\n  }\n\n  let prevCode = {\n    S3Bucket: prevEnvironment.Variables.LAMBDA_CODE_S3BUCKET,\n    S3Key: prevEnvironment.Variables.LAMBDA_CODE_S3KEY\n  };\n\n  let [\n    PREV_LAMBDA_CODE_SHA256SUM,\n    PREV_LAMBDA_CODE_SHA256SUM_CORE\n  ] = await getCodeChecksums({\n    env,\n    Code: prevCode\n  });\n\n  if (LAMBDA_CODE_SHA256SUM_CORE === PREV_LAMBDA_CODE_SHA256SUM_CORE) {\n    // no real code change, so don't change lambda\n    Code = prevCode;\n    LAMBDA_CODE_SHA256SUM = PREV_LAMBDA_CODE_SHA256SUM;\n    ({\n      LAMBDA_CODE_S3BUCKET,\n      LAMBDA_CODE_S3KEY\n    } = prevEnvironment.Variables);\n\n    _.merge(codeChecksumVariables, {\n      LAMBDA_CODE_S3BUCKET,\n      LAMBDA_CODE_S3KEY\n    });\n  }\n\n  return codeChecksumVariables;\n};\n\nexport let add = async function({\n  Code,\n  Resources,\n  cfnDir,\n  config,\n  env,\n  resNs,\n  force = false\n}) {\n  let FunctionName =\n      _.replace(config.nameTemplate, '{{.Function.Name}}', config.name);\n\n  // eslint-disable-next-line global-require\n  let partialTpl = await require(path.join(cfnDir, 'index.js')).default({\n    env,\n    dir: cfnDir,\n    resNs\n  });\n\n  let Lambda = _.get(partialTpl, 'Resources.Lambda');\n  if (Lambda) {\n    delete partialTpl.Resources.Lambda;\n  } else {\n    Lambda = {};\n  }\n\n  _.merge(Lambda, {\n    Properties: {\n      Environment: {\n        Variables: config.environment || {}\n      }\n    }\n  });\n\n  // filter out storage resources\n  partialTpl.Resources = _.pickBy(partialTpl.Resources, function(Resource, _ResourceName) {\n    switch (Resource.Type) {\n    case 'AWS::DynamoDB::Table':\n    case 'AWS::Kinesis::DeliveryStream':\n    case 'AWS::Kinesis::Stream':\n    case 'AWS::S3::Bucket':\n      return false;\n    default:\n      return true;\n    }\n  });\n\n  partialTpl.Resources = _.mapKeys(partialTpl.Resources, function(_value, key) {\n    return `${resNs}${key}`;\n  });\n\n  _.merge(Resources, partialTpl.Resources);\n\n  Resources[`${resNs}LambdaL`] = _.defaultTo(Resources[`${resNs}LambdaL`], {\n    DeletionPolicy: 'Delete',\n    Type: 'AWS::Logs::LogGroup',\n    Properties: {\n      LogGroupName: `/aws/lambda/${FunctionName}`,\n      RetentionInDays: 7\n    }\n  });\n\n  let Role = {\n    'Fn::GetAtt': [\n      'LambdaR',\n      'Arn'\n    ]\n  };\n\n  if (Resources[`${resNs}LambdaR`]) {\n    Role = {\n      'Fn::GetAtt': [\n        `${resNs}LambdaR`,\n        'Arn'\n      ]\n    };\n  }\n\n  let Variables = {\n    APEX_FUNCTION_NAME: config.name, // apex specific\n    LAMBDA_FUNCTION_NAME: FunctionName // apex specific\n  };\n\n  let codeChecksumVariables = await getCodeChecksumVariables({\n    Code,\n    FunctionName,\n    env,\n    force\n  });\n  _.merge(Variables, codeChecksumVariables);\n\n  Lambda = _.merge({\n    DependsOn: _.concat([\n      `${resNs}LambdaL`\n    ], _.get(Lambda, 'DependsOn', [])),\n    Type: 'AWS::Lambda::Function',\n    Properties: {\n      Code,\n      Description: config.description,\n      FunctionName,\n      Handler: config.handler,\n      MemorySize: config.memory,\n      Timeout: config.timeout,\n      Role, // config.role,\n      Runtime: config.runtime,\n      Environment: {\n        Variables\n      }\n    }\n  }, Lambda);\n\n  return Lambda;\n};\n\nexport let getStorageResources = async function({\n  cfnDir,\n  env,\n  resNs\n}) {\n  // eslint-disable-next-line global-require\n  let partialTpl = await require(path.join(cfnDir, 'index.js')).default({\n    env,\n    dir: cfnDir,\n    resNs\n  });\n\n  // filter storage resources\n  partialTpl.Resources = _.pickBy(partialTpl.Resources, function(Resource, _ResourceName) {\n    switch (Resource.Type) {\n    case 'AWS::DynamoDB::Table':\n    case 'AWS::Kinesis::Stream':\n    case 'AWS::Kinesis::DeliveryStream':\n    case 'AWS::S3::Bucket':\n      break;\n    default:\n      return false;\n    }\n    return true;\n  });\n\n  partialTpl.Resources = _.mapKeys(partialTpl.Resources, function(_value, key) {\n    return `${resNs}${key}`;\n  });\n\n  return partialTpl.Resources;\n};\n\nexport let getPolicyStatement = function({_env} = {}) {\n  let Statement = [];\n\n  Statement.push({\n    Sid: 'Allow write access to logs',\n    Effect: 'Allow',\n    Action: [\n      'logs:CreateLogGroup',\n      'logs:CreateLogStream',\n      'logs:PutLogEvents'\n    ],\n    Resource: 'arn:aws:logs:*:*:*'\n  });\n\n  return Statement;\n};\n\nexport let getPolicy = function({env}) {\n  let Policy = {\n    Type: 'AWS::IAM::ManagedPolicy',\n    Properties: {\n      Description: `${env.ENV_NAME}: API Lambda Policy`,\n      PolicyDocument: {\n        Version: '2012-10-17',\n        Statement: getPolicyStatement({env})\n      }\n    }\n  };\n\n  return Policy;\n};\n\nexport let getRole = function({env}) {\n  let Role = {\n    Type: 'AWS::IAM::Role',\n    Properties: {\n      AssumeRolePolicyDocument: {\n        Statement: [{\n          Effect: 'Allow',\n          Principal: getPrincipal({\n            env,\n            service: 'lambda'\n          }),\n          Action: 'sts:AssumeRole'\n        }]\n      },\n      ManagedPolicyArns: []\n    }\n  };\n\n  return Role;\n};\n"]}