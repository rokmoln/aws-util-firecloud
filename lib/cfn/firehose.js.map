{"version":3,"sources":["../../src/cfn/firehose.ts"],"names":[],"mappings":"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","file":"firehose.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\n\nimport _ from 'lodash-firecloud';\n\nimport {\n  get as getPrincipal\n} from '../principal';\n\n// FIXME this needs some serious refactoring\nexport let addFirehoseToS3 = function({\n  BucketName,\n  BufferingHints,\n  CompressionFormat,\n  DeliveryStreamName,\n  Prefix = 'default',\n  Resources,\n  env,\n  resName,\n  LogStreamName,\n  logGroupResName,\n  resNs\n}) {\n  Prefix = _.replace(Prefix, /\\/$/, '');\n\n  if (_.isUndefined(resName)) {\n    resName = _.upperFirst(_.camelCase(Prefix === 'default' ? '' : Prefix));\n    resName = `${resName}FirehoseToS3`;\n  }\n\n  let {\n    LogGroupName\n  } = Resources[logGroupResName].Properties;\n  LogStreamName = _.defaultTo(LogStreamName, Prefix);\n\n  let logStream = {\n    DependsOn: [\n      `${resNs}${logGroupResName}`\n    ],\n    Type: 'AWS::Logs::LogStream',\n    Properties: {\n      LogGroupName,\n      LogStreamName\n    }\n  };\n\n  let policyStatements = [];\n  policyStatements.push({\n    Sid: 'Allow write access to firehose bucket',\n    Effect: 'Allow',\n    Action: [\n      's3:AbortMultipartUpload',\n      's3:GetBucketLocation',\n      's3:Get*',\n      's3:List*',\n      's3:ListBucketMultipartUploads',\n      's3:PutBucketAcl',\n      's3:PutObject*'\n    ],\n    Resource: [\n      `arn:aws:s3:::${BucketName}`,\n      `arn:aws:s3:::${BucketName}/${Prefix}/*`\n    ]\n  });\n  policyStatements.push({\n    Sid: 'Allow write access to error logs',\n    Effect: 'Allow',\n    Action: [\n      'logs:PutLogEvents'\n    ],\n    Resource: [\n      `arn:aws:logs:${env.AWS_REGION}:${env.AWS_ACCOUNT_ID}:log-group:${LogGroupName}:log-stream:${LogStreamName}`\n    ]\n  });\n\n  let policy = {\n    Type: 'AWS::IAM::ManagedPolicy',\n    Properties: {\n      Description: `${env.ENV_NAME}: ${resName} Policy`,\n      PolicyDocument: {\n        Version: '2012-10-17',\n        Statement: policyStatements\n      }\n    }\n  };\n\n  let role = {\n    Type: 'AWS::IAM::Role',\n    Properties: {\n      AssumeRolePolicyDocument: {\n        Statement: [{\n          Effect: 'Allow',\n          Principal: getPrincipal({\n            env,\n            service: 'firehose'\n          }),\n          Action: 'sts:AssumeRole',\n          Condition: {\n            StringEquals: {\n              'sts:ExternalId': env.AWS_ACCOUNT_ID\n            }\n          }\n        }]\n      },\n      ManagedPolicyArns: [{\n        Ref: `${resNs}${resName}P`\n      }]\n    }\n  };\n\n  let deliveryStream = {\n    DependsOn: [\n      `${resNs}${resName}LS`\n    ],\n    Type: 'AWS::KinesisFirehose::DeliveryStream',\n    Properties: {\n      DeliveryStreamName,\n      S3DestinationConfiguration: {\n        BucketARN: `arn:aws:s3:::${BucketName}`,\n        BufferingHints,\n        CloudWatchLoggingOptions: { // error logging\n          Enabled: true,\n          LogGroupName,\n          LogStreamName\n        },\n        CompressionFormat,\n        EncryptionConfiguration: undefined,\n        Prefix: `${Prefix}/`, // 'YYYY/MM/DD/HH' prefix is implicit\n        RoleARN: {\n          'Fn::GetAtt': [\n            `${resNs}${resName}R`,\n            'Arn'\n          ]\n        }\n      }\n    }\n  };\n\n  Resources[`${resName}`] = deliveryStream;\n  Resources[`${resName}LS`] = logStream;\n  Resources[`${resName}P`] = policy;\n  Resources[`${resName}R`] = role;\n};\n"]}