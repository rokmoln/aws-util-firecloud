{"version":3,"sources":["../src/aws-dynamo.js"],"names":[],"mappings":"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","file":"aws-dynamo.js","sourcesContent":["import _ from 'lodash-firecloud';\nimport aws from 'aws-sdk';\n\nexport let getDefaultTotalSegments = async function(TableName) {\n  let db = new aws.DynamoDB();\n  let {Table} = await db.describeTable({TableName}).promise();\n\n  let TwoGigabytesInBytes = 2 * 1024 * 1024 * 1024;\n  return Math.floor(Table.TableSizeBytes / TwoGigabytesInBytes) + 1;\n};\n\nexport let scanWithBackticks = function(args) {\n  if (!args.FilterExpression) {\n    return args;\n  }\n\n  args.ExpressionAttributeNames = _.defaultTo(args.ExpressionAttributeNames, {});\n  args.FilterExpression = _.replace(args.FilterExpression, /`([^`]+)`/g, function(_match, attrs) {\n    attrs = _.split(attrs, '.');\n    attrs = _.map(attrs, function(attr) {\n      attr = _.replace(attr, /^#/, '');\n      let safeAttr = _.replace(attr, /[^A-Za-z0-9]/g, '_');\n      safeAttr = `#${safeAttr}`;\n      // FIXME should I even bother checking if this is a reserved word\n      args.ExpressionAttributeNames[safeAttr] = attr;\n      return safeAttr;\n    });\n    attrs = attrs.join('.');\n    return attrs;\n  });\n  return args;\n};\n\nexport let dcScan = async function(args, iteratee) {\n  let dc = new aws.DynamoDB.DocumentClient();\n\n  args = exports.scanWithBackticks(args);\n  // NOTE: we disable parallel scanning for now\n  // until we reach >2GB dynamodb tables\n  // args.TotalSegments =\n  //   _.defaultTo(args.TotalSegments,\n  //   await exports.getDefaultTotalSegments(args.TableName));\n  args.TotalSegments = 1;\n  args.TotalSegments = _.max([1, args.TotalSegments]);\n\n  if (args.Limit) {\n    args.Limit = _.ceil(args.Limit / args.TotalSegments);\n  }\n\n  let continueScan = true;\n  let results = [];\n  let limit;\n\n  let scan = async function() {\n    await Promise.all(_.map(_.range(0, args.TotalSegments), async function(Segment) {\n      let iteratorArgs = _.cloneDeep(args);\n      iteratorArgs.Segment = Segment;\n\n      if (results[Segment]) {\n        iteratorArgs.ExclusiveStartKey = results[Segment].LastEvaluatedKey;\n      }\n      results[Segment] = await dc.scan(iteratorArgs).promise();\n    }));\n\n    _.forEach(results, function(result) { // eslint-disable-line no-loop-func\n      let cbResult = _.defaultTo(iteratee(result), true);\n\n      if (_.isBoolean(cbResult)) {\n        cbResult = {\n          continueScan: cbResult\n        };\n      }\n\n      limit = _.get(cbResult, 'args.Limit');\n      continueScan =\n        cbResult.continueScan !== false &&\n        !_.isUndefined(result.LastEvaluatedKey);\n\n      return continueScan;\n    });\n\n    if (!continueScan) {\n      return;\n    }\n\n    if (limit) {\n      args.Limit = _.ceil(limit / args.TotalSegments);\n    }\n\n    await scan();\n  };\n\n  await scan();\n};\n\nexport let dcPut = async function(args) {\n  let dc = new aws.DynamoDB.DocumentClient();\n\n  args.Item = _.deeply(_.pickBy)(args.Item, function(value) {\n    return !_.isUndefined(value) && value !== '';\n  });\n\n  return await dc.put(args).promise();\n};\n"]}