{"version":3,"sources":["../src/s3.js"],"names":[],"mappings":"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","file":"s3.js","sourcesContent":["import AWS_ACCOUNT from './account';\nimport _ from 'lodash-firecloud';\n\nimport {\n  get as getRegion,\n  getDomain as getRegionDomain\n} from './region';\n\n// https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_website_region_endpoints\nlet _hyphenRegions = [\n  'us-east-1',\n  'us-west-1',\n  'us-west-2',\n  'ap-southeast-1',\n  'ap-southeast-2',\n  'ap-northeast-1',\n  'eu-west-1',\n  'sa-east-1'\n];\n\nlet _getBucketName = function({\n  prefix,\n  region,\n  env\n}) {\n  region = _.defaultTo(region, getRegion({env}));\n\n  let name = `${prefix}-${env.PROJECT_DOMAIN_NAME}-${region}`;\n  // as per http://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html\n  // the recommendation is NOT to use dots/uppercase\n  name = _.toLower(name);\n  name = _.replace(name, /[^a-z0-9-]/g, '-');\n  name = _.replace(name, /-+/g, '-');\n\n  return name;\n};\n\n// one per whole project (like builds- or infra-)\nexport let getProjectBucketName = function({\n  prefix,\n  region,\n  env\n}) {\n  return _getBucketName({prefix, env, region});\n};\n\n// one per AWS account (like logs- or config-)\nexport let getAccountBucketName = function({\n  prefix,\n  region,\n  env\n}) {\n  prefix = `${prefix}-${AWS_ACCOUNT.ID}`;\n  return _getBucketName({prefix, env, region});\n};\n\n// one per ENV_NAME (like lambda buckets)\nexport let getEnvBucketName = function({\n  prefix,\n  env,\n  region\n}) {\n  prefix = `${prefix}-${env.ENV_NAME}`;\n  return _getBucketName({prefix, env, region});\n};\n\nexport let getBucketDomainName = function({\n  BucketName,\n  region,\n  env\n}) {\n  region = _.defaultTo(region, getRegion({env}));\n  let domain = getWebsiteDomain({region, env});\n\n  return `${BucketName}.${domain}`;\n};\n\nexport let getDomain = function({\n  region,\n  env\n}) {\n  region = _.defaultTo(region, getRegion({env}));\n  let service = `s3-${region}`;\n  if (region === 'us-east-1') {\n    service = 's3';\n  }\n  let domain = getRegionDomain({region, env});\n  return `${service}.${domain}`;\n};\n\nexport let getWebsiteDomain = function({\n  region,\n  env\n}) {\n  region = _.defaultTo(region, getRegion({env}));\n  let domain = getRegionDomain({region, env});\n\n  let sep = '.';\n  if (_.includes(_hyphenRegions, region)) {\n    sep = '-';\n  }\n\n  return `s3-website${sep}${region}.${domain}`;\n};\n\nexport default exports;\n"]}