{"version":3,"sources":["../src/s3.js"],"names":[],"mappings":";;;;;;;AAAA;;;;AACA;;;;AAEA;;;;AAKO,IAAI,0CAAiB,UAAS;AACnC,QADmC;AAEnC,QAFmC;AAGnC;AAHmC,CAAT,EAIzB;AACD,WAAS,0BAAE,SAAF,CAAY,MAAZ,EAAoB,iBAAU,EAAC,GAAD,EAAV,CAApB,CAAT;;AAEA,MAAI,OAAQ,GAAE,MAAO,IAAG,IAAI,mBAAoB,IAAG,MAAO,EAA1D;AACA;AACA;AACA,SAAO,0BAAE,OAAF,CAAU,IAAV,CAAP;AACA,SAAO,0BAAE,OAAF,CAAU,IAAV,EAAgB,aAAhB,EAA+B,GAA/B,CAAP;AACA,SAAO,0BAAE,OAAF,CAAU,IAAV,EAAgB,KAAhB,EAAuB,GAAvB,CAAP;;AAEA,SAAO,IAAP;AACD,CAfM;;AAiBA,IAAI,sDAAuB,UAAS;AACzC,QADyC;AAEzC,QAFyC;AAGzC;AAHyC,CAAT,EAI/B;AACD;AACA,WAAU,GAAE,MAAO,IAAG,kBAAY,EAAG,EAArC;AACA,SAAO,QAAQ,cAAR,CAAuB,EAAC,MAAD,EAAS,GAAT,EAAc,MAAd,EAAvB,CAAP;AACD,CARM;;AAUA,IAAI,8CAAmB,QAAQ,cAA/B;;AAEA,IAAI,oDAAsB,UAAS;AACxC,KADwC;AAExC,KAFwC;AAGxC;AAHwC,CAAT,EAI9B;AACD,MAAI,OAAO,QAAQ,gBAAR,CAAyB;AAClC,YAAS,GAAE,IAAI,IAAK,IAAG,IAAI,QAAS,EADF;AAElC,UAFkC;AAGlC;AAHkC,GAAzB,CAAX;;AAMA,SAAO,IAAP;AACD,CAZM;;AAcA,IAAI,oDAAsB,UAAS;AACxC,YADwC;AAExC,QAFwC;AAGxC;AAHwC,CAAT,EAI9B;AACD,WAAS,0BAAE,SAAF,CAAY,MAAZ,EAAoB,iBAAU,EAAC,GAAD,EAAV,CAApB,CAAT;AACA,MAAI,SAAS,uBAAgB,EAAC,MAAD,EAAS,GAAT,EAAhB,CAAb;;AAEA,SAAQ,GAAE,UAAW,eAAc,MAAO,IAAG,MAAO,EAApD;AACD,CATM;;AAWA,IAAI,gCAAY,UAAS;AAC9B,QAD8B;AAE9B;AAF8B,CAAT,EAGpB;AACD,WAAS,0BAAE,SAAF,CAAY,MAAZ,EAAoB,iBAAU,EAAC,GAAD,EAAV,CAApB,CAAT;AACA,MAAI,UAAW,MAAK,MAAO,EAA3B;AACA,MAAI,WAAW,WAAf,EAA4B;AAC1B,cAAU,IAAV;AACD;AACD,MAAI,SAAS,uBAAgB,EAAC,MAAD,EAAS,GAAT,EAAhB,CAAb;AACA,SAAQ,GAAE,OAAQ,IAAG,MAAO,EAA5B;AACD,CAXM;;kBAaQ,O","file":"s3.js","sourcesContent":["import _ from 'lodash-firecloud';\nimport AWS_ACCOUNT from './account';\n\nimport {\n  get as getRegion,\n  getDomain as getRegionDomain\n} from './region';\n\nexport let _getBucketName = function({\n  prefix,\n  region,\n  env\n}) {\n  region = _.defaultTo(region, getRegion({env}));\n\n  let name = `${prefix}-${env.PROJECT_DOMAIN_NAME}-${region}`;\n  // as per http://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html\n  // the recommendation is NOT to use dots/uppercase\n  name = _.toLower(name);\n  name = _.replace(name, /[^a-z0-9-]/g, '-');\n  name = _.replace(name, /-+/g, '-');\n\n  return name;\n};\n\nexport let getAccountBucketName = function({\n  prefix,\n  region,\n  env\n}) {\n  // there is one bucket per AWS account\n  prefix = `${prefix}-${AWS_ACCOUNT.ID}`;\n  return exports._getBucketName({prefix, env, region});\n};\n\nexport let getEnvBucketName = exports._getBucketName;\n\nexport let getLambdaBucketName = function({\n  pkg,\n  env,\n  region\n}) {\n  let name = exports.getEnvBucketName({\n    prefix: `${pkg.name}-${env.ENV_NAME}`,\n    region,\n    env\n  });\n\n  return name;\n};\n\nexport let getBucketDomainName = function({\n  bucketName,\n  region,\n  env\n}) {\n  region = _.defaultTo(region, getRegion({env}));\n  let domain = getRegionDomain({region, env});\n\n  return `${bucketName}.s3-website-${region}.${domain}`;\n};\n\nexport let getDomain = function({\n  region,\n  env\n}) {\n  region = _.defaultTo(region, getRegion({env}));\n  let service = `s3-${region}`;\n  if (region === 'us-east-1') {\n    service = 's3';\n  }\n  let domain = getRegionDomain({region, env});\n  return `${service}.${domain}`;\n};\n\nexport default exports;\n"]}