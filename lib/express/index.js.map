{"version":3,"sources":["../../src/express/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\n\n/* eslint-disable no-invalid-this */\nimport * as middlewares from './middlewares';\nimport Layer from 'express/lib/router/layer';\nimport _ from 'lodash-firecloud';\nimport _express from 'express';\n// eslint-disable-next-line import/no-unresolved\nimport awsLambda from 'aws-lambda';\nimport bearerToken from 'express-bearer-token';\nimport cors from 'cors';\nimport http from 'http';\nimport responseTime from 'response-time';\n\nimport {\n  bootstrap as bootstrapLambda\n} from '../lambda';\n\nimport {\n  ExpressApp,\n  ExpressHandler,\n  ExpressLambdaHandler,\n  ExpressLambdaRequest,\n  ExpressLambdaResponse,\n  LambdaContext,\n  PackageJson\n} from '../types';\n\nimport {\n  LambdaHttp\n} from 'http-lambda';\n\nlet _bootstrapLayer = function(): void {\n  // override Layer.prototype as defined in express@4.16.4\n  // eslint-disable-next-line max-params\n  Layer.prototype.handle_error = async function(\n    this: Layer,\n    error: Error,\n    req: ExpressLambdaRequest,\n    res: ExpressLambdaResponse,\n    next: _express.NextFunction\n  ) {\n    let fn = this.handle;\n\n    if (fn.length !== 4) {\n      // not a standard error handler\n      return next(error);\n    }\n\n    try {\n      // original code\n      // fn(error, req, res, next);\n      await fn(error, req, res, next);\n    } catch (err) {\n      return next(err);\n    }\n  };\n\n  // eslint-disable-next-line max-params\n  Layer.prototype.handle_request = async function(\n    this: Layer,\n    req: ExpressLambdaRequest,\n    res: ExpressLambdaResponse,\n    next: _express.NextFunction\n  ) {\n    let fn = this.handle;\n\n    if (fn.length > 3) {\n      // not a standard request handler\n      return next();\n    }\n\n    try {\n      // original code\n      // fn(req, res, next);\n      await fn(req, res, next);\n    } catch (err) {\n      return next(err);\n    }\n  };\n};\n\nlet _bootstrap = async function(\n  fn: ExpressLambdaHandler,\n  e: awsLambda.APIGatewayEvent,\n  ctx: LambdaContext\n): Promise<ExpressApp> {\n  _bootstrapLayer();\n  let app = _express() as ExpressApp;\n\n  app.disable('x-powered-by');\n  app.disable('etag');\n  app.enable('trust proxy');\n  app.set('json spaces', 2);\n\n  let defaultMiddlewares = {} as {[key: string]: ExpressHandler;};\n  defaultMiddlewares.responseTime = responseTime();\n  defaultMiddlewares.cors = cors({\n    exposedHeaders: [\n      'date',\n      'etag',\n      'link',\n      'location',\n      'x-response-time'\n    ],\n    maxAge: 24 * 60 * 60 // 24 hours\n  });\n  defaultMiddlewares.bearerToken = bearerToken();\n  defaultMiddlewares.applyMixins = middlewares.applyMixins();\n  defaultMiddlewares.xForward = middlewares.xForward();\n  defaultMiddlewares.noCache = function(_req, res, next) {\n    res.set('cache-control', 'max-age=0, no-store');\n    next();\n  };\n\n  _.forEach(defaultMiddlewares, function(middleware, name) {\n    middleware.disable = function() {\n      defaultMiddlewares[name] = function(_req, _res, next) {\n        next();\n      };\n    };\n\n    app.use(function(req, res, next) {\n      defaultMiddlewares[name](req, res, next);\n    });\n  });\n\n  app.defaultMiddlewares = defaultMiddlewares;\n\n  await fn(app, e, ctx);\n\n  // error handlers need to be registered last\n  app.use(middlewares.handleResponseError());\n\n  return app;\n};\n\nexport let bootstrap = function<\n  TEvent extends awsLambda.APIGatewayEvent = awsLambda.APIGatewayEvent,\n  TResult extends awsLambda.APIGatewayProxyResult = awsLambda.APIGatewayProxyResult\n>(fn: ExpressLambdaHandler, {\n  pkg\n}: {\n  pkg: PackageJson;\n}): awsLambda.Handler<TEvent, TResult> {\n  // @ts-ignore\n  return bootstrapLambda<TEvent, TResult>(\n    async function(e: TEvent, ctx: LambdaContext) {\n      let app: ExpressApp;\n      await ctx.log.trackTime(\n        'Creating express app...',\n        async function() {\n          app = await _bootstrap(fn, e, ctx);\n        }\n      );\n\n      let result: TResult;\n      ctx.log.info(`Handling ${e.httpMethod} ${e.path}...`);\n      await ctx.log.trackTime(\n        'Creating HTTP server (handling request)...',\n        _.promisify(function(done: (err?: Error) => void) {\n          let http = new LambdaHttp(e, ctx, function(err: Error, resData) {\n            if (_.isUndefined(err)) {\n              result = resData as TResult;\n            }\n            done(err);\n          });\n          http.createServer(app);\n        })\n      );\n\n      ctx.log.info(`Handled with ${result.statusCode} ${http.STATUS_CODES[result.statusCode]}...`);\n      return result;\n    }, {\n      pkg\n    });\n};\n"]}