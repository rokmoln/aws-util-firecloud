{"version":3,"sources":["../../src/express/res-mixins.ts"],"names":[],"mappings":";AACA,2E,8FADA;;;;;;AAOO,IAAI,OAAO,GAAG,UAAsC,IAAtC,EAAkD;AACrE,MAAI;AACF,IAAA,MADE;AAEA,EAAA,IAFJ;AAGA,SAAO,IAAI,CAAC,MAAZ;AACA,MAAI,kBAAkB,GAAG;AACtB,MAAG,MAAO,GADY,CAAzB;;;AAIA;AACA,2BAAE,OAAF,CAAU,IAAV,EAAgB,UAAS,KAAT,EAAgB,GAAhB,EAAqB;AACnC,IAAA,kBAAkB,CAAC,IAAnB,CAAyB,GAAE,GAAI,KAAI,KAAM,GAAzC;AACD,GAFD;;AAIA,MAAI,QAAQ,GAAG,kBAAkB,CAAC,IAAnB,CAAwB,IAAxB,CAAf;AACA,MAAI,UAAU,GAAG,yBAAE,SAAF,CAAY,KAAK,SAAL,CAAe,MAAf,CAAZ,EAAoC,EAApC,CAAjB;AACA,EAAA,UAAU,CAAC,IAAX,CAAgB,QAAhB;AACA,OAAK,SAAL,CAAe,MAAf,EAAuB,UAAvB;AACD,CAlBM,C;;AAoBA,IAAI,IAAI,GAAG,gBAA4C,IAA5C,EAAuE;AACvF;AACA,OAAK,IAAL,GAAY,KAAK,OAAjB;;AAEA,MAAI;AACF,IAAA,GADE;AAEA,MAFJ;;AAIA,MAAI,yBAAE,SAAF,CAAY,KAAK,QAAjB;AACA,2BAAE,UAAF,CAAa,KAAK,GAAL,CAAS,cAAT,CAAb,EAAuC,KAAK,QAAL,CAAc,MAAd,CAAqB,SAA5D,CADJ;AAEE;AACA,QAAI,KAAK,GAAG,KAAK,QAAL,CAAc,IAAd,CAAZ;AACA,QAAI,CAAC,KAAL,EAAY;AACV;AACA,MAAA,GAAG,CAAC,GAAJ,CAAQ,IAAR,qKAAa;AACX,QAAA,MAAM,EAAE,KAAK,QAAL,CAAc,MADX;AAEX,QAAA,IAFW;AAGX,QAAA,MAAM,EAAE,KAAK,QAAL,CAAc,MAHX;AAIX,QAAA,GAAG,EAAE,KAAK,GAJC;AAKX,QAAA,GAAG,EAAE,IALM,EAAb;AAMG,mCANH;AAOD;AACF;;AAED,OAAK,IAAL,CAAU,IAAV;AACD,CAzBM,C;;AA2BA,IAAI,IAAI,GAAG,UAAsC,IAAtC,EAA0D;AAC1E,MAAI,yBAAE,WAAF,CAAc,IAAd,CAAJ,EAAyB;AACvB;AACD;;AAED,OAAK,OAAL,CAAa,IAAb;AACD,CANM,C","file":"res-mixins.js","sourcesContent":["/* eslint-disable babel/no-invalid-this */\nimport _ from 'lodash-firecloud';\n\nimport {\n  ExpressLambdaResponse\n} from '../types';\n\nexport let addLink = function(this: ExpressLambdaResponse, link): void {\n  let {\n    target\n  } = link;\n  delete link.target;\n  let linkItemComponents = [\n    `<${target}>`\n  ];\n\n  // eslint-disable-next-line lodash/prefer-map\n  _.forEach(link, function(value, key) {\n    linkItemComponents.push(`${key}=\"${value}\"`);\n  });\n\n  let linkItem = linkItemComponents.join('; ');\n  let linkHeader = _.defaultTo(this.getHeader('link'), []) as string[];\n  linkHeader.push(linkItem);\n  this.setHeader('link', linkHeader);\n};\n\nexport let send = async function(this: ExpressLambdaResponse, body?: any): Promise<void> {\n  // @ts-ignore\n  this.send = this.oldSend;\n\n  let {\n    ctx\n  } = this;\n\n  if (_.isDefined(this.validate) &&\n      _.startsWith(this.get('content-type'), this.validate.schema.mediaType)\n  ) {\n    let valid = this.validate(body);\n    if (!valid) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      ctx.log.warn({\n        errors: this.validate.errors,\n        body,\n        schema: this.validate.schema,\n        req: this.req,\n        res: this\n      }, 'Response validation failed!');\n    }\n  }\n\n  this.send(body);\n};\n\nexport let type = function(this: ExpressLambdaResponse, type: string): void {\n  if (_.isUndefined(type)) {\n    return;\n  }\n\n  this.oldType(type);\n};\n"]}