{"version":3,"sources":["../src/lambda.js"],"names":[],"mappings":"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","file":"lambda.js","sourcesContent":["/* eslint-disable no-console */\nimport BunyanSlack from 'bunyan-slack';\nimport _ from 'lodash-firecloud';\nimport aws from 'aws-sdk';\nimport bunyan from 'bunyan';\nimport bunyanFormat from 'bunyan-format/lib/format-record';\nimport os from 'os';\n\nexport let awsLoggerRE =\n  / *\\[AWS ([^ ]+) ([^ ]+) ([^ ]+)s ([^ ]+) retries] ([^(]+)\\(([^)]+)\\).*/;\n\nexport let asyncHandler = function(fn) {\n  return function(...args) {\n    let next = args[args.length - 1];\n    fn(...args).catch(next);\n  };\n};\n\nexport let inspect = async function({_e, ctx}) {\n  if (ctx.log.level() > ctx.log.resolveLevel('TRACE')) {\n    return;\n  }\n\n  // Added in: v6.1.0\n  // let cpuUsage = process.cpuUsage(exports.inspect.previousCpuUsage);\n  // exports.inspect.previousCpuUsage = cpuUsage;\n\n  let inspection = {\n    process: _.merge(_.pick(process, [\n      'arch',\n      'argv',\n      'argv0',\n      'config',\n      'env',\n      'execArgv',\n      'pid',\n      'platform',\n      'release',\n      'title',\n      'version',\n      'versions'\n    ]), {\n      // cpuUsage,\n      memoryUsage: process.memoryUsage(),\n      uptime: process.uptime()\n    }),\n    os: _.mapValues(os, function(fn) {\n      if (!_.isFunction(fn)) {\n        return;\n      }\n\n      return fn();\n    })\n  };\n\n  let {previousMemoryUsage} = exports.inspect;\n  if (previousMemoryUsage) {\n    inspection.process.memoryUsageDiff = {\n      rss: previousMemoryUsage.rss - inspection.process.memoryUsage.rss,\n      heapUsed: previousMemoryUsage.heapUsed - inspection.process.memoryUsage.heapUsed,\n      time: previousMemoryUsage.uptime - inspection.process.uptime\n    };\n    exports.inspect.previousMemoryUsage = {\n      rss: inspect.process.memoryUsage.rss,\n      heapUsed: inspect.process.memoryUsage.heapUsed,\n      uptime: inspect.process.uptime\n    };\n  }\n\n  ctx.log.trace(inspection, 'Inspection');\n};\n\n// using console.log instead of the logger on purpose\nexport let bootstrap = function(fn, {pkg}) {\n  return exports.asyncHandler(async function(e, ctx, next) {\n    await _.consoleLogTime(\n      'aws-util-firecloud.lambda.bootstrap: Merging env ctx...',\n      async function() {\n        await exports.mergeEnvCtx({e, ctx, pkg});\n      }\n    );\n\n    await _.consoleLogTime(\n      'aws-util-firecloud.lambda.bootstrap: Setting up logger...',\n      async function() {\n        exports.setupLogging({e, ctx});\n      }\n    );\n\n    await _.consoleLogTime(\n      'aws-util-firecloud.lambda.bootstrap: Inspecting...',\n      async function() {\n        await exports.inspect({e, ctx});\n      }\n    );\n\n    await _.consoleLogTime(\n      'aws-util-firecloud.lambda.bootstrap: Running fn...',\n      async function() {\n        await fn(e, ctx, next);\n      }\n    );\n\n    if (global && global.gc) {\n      await _.consoleLogTime(\n        'aws-util-firecloud.lambda.bootstrap: Garbage collection on demand...',\n        async function() {\n          global.gc();\n        }\n      );\n    }\n  });\n};\n\nexport let mergeEnvCtx = async function({e, ctx, pkg}) {\n  console.log('mergeEnvCtx: Get env from event and context...');\n\n  let AWS_ACCOUNT_ID =\n      _.split(_.get(ctx, 'invokedFunctionArn', ''), ':')[4];\n  AWS_ACCOUNT_ID =\n    _.defaultTo(_.get(e, 'requestContext.accountId'), AWS_ACCOUNT_ID);\n\n  let AWS_REGION =\n      _.split(_.get(ctx, 'invokedFunctionArn', ''), ':')[3];\n\n  let pkgNameRE = _.replace(pkg.name, /([.-])/, '\\\\$1');\n  let ENV_NAME =\n      _.split(_.get(ctx, 'invokedFunctionArn', ''), ':')[6];\n  ENV_NAME = _.replace(ENV_NAME, new RegExp(`\\\\-${pkgNameRE}$`), '');\n\n  let AWS_LAMBDA_FUNCTION_NAME =\n      _.split(_.get(ctx, 'invokedFunctionArn', ''), ':')[6];\n\n  let AWS_LAMBDA_FUNCTION_ALIAS =\n      _.split(_.get(ctx, 'invokedFunctionArn', ''), ':')[7];\n  AWS_LAMBDA_FUNCTION_ALIAS = _.defaultTo(AWS_LAMBDA_FUNCTION_ALIAS, '$LATEST');\n\n  _.defaultsDeep(ctx, {\n    env: e.stageVariables\n  }, {\n    env: {\n      AWS_ACCOUNT_ID,\n      AWS_LAMBDA_FUNCTION_ALIAS,\n      AWS_LAMBDA_FUNCTION_NAME,\n      AWS_REGION,\n      ENV_NAME\n    }\n  }, {\n    env: e.stageVariables\n  }, {\n    env: {\n      // AWS does not allow empty-string stage variables...\n      API_BASE_PATH: '',\n      API_SECONDARY_BASE_PATH: ''\n    }\n  }, {\n    env: process.env\n  });\n\n  console.log('mergeEnvCtx: Get env ctx from config bucket...');\n\n  let envCtx = await exports.getEnvCtx({\n    ctx,\n    tags: [\n      'lambdas',\n      `lambdas/${pkg.name}`\n    ]\n  });\n  _.defaultsDeep(ctx, envCtx);\n};\n\nexport let getEnvCtxResolver = function({ctx, tags = ['default']}) {\n  let {env} = ctx;\n\n  return [\n    env.AWS_ACCOUNT_ID,\n    env.AWS_LAMBDA_FUNCTION_ALIAS,\n    env.AWS_LAMBDA_FUNCTION_NAME,\n    env.AWS_REGION,\n    env.ENV_NAME\n  ].concat(tags).join();\n};\n\nexport let getEnvCtx = async function({ctx, tags = ['default']}) { // eslint-disable-line no-unused-vars\n  // eslint-disable-next-line fp/no-arguments\n  let cacheKey = exports.getEnvCtxResolver(...arguments);\n  let cachedResult = exports._getEnvCtx.cache[cacheKey];\n  cachedResult = _.defaultTo(cachedResult, exports._getEnvCtx.oldCache[cacheKey]);\n  cachedResult = _.defaultTo(cachedResult, {});\n  let aMinuteAgo = Date.now() - 60 * 1000;\n\n  if (!cachedResult.ctx) {\n    console.log('getEnvCtx: Waiting for new env ctx...');\n    // eslint-disable-next-line fp/no-arguments\n    cachedResult = await exports._getEnvCtx(...arguments);\n  }\n\n  if (cachedResult.lastFetched < aMinuteAgo) {\n    console.log('getEnvCtx: Refreshing env ctx for next call...');\n    exports._getEnvCtx.oldCache.set(cacheKey, exports._getEnvCtx.cache[cacheKey]);\n    exports._getEnvCtx.cache.delete(cacheKey);\n    // eslint-disable-next-line fp/no-arguments\n    exports._getEnvCtx(...arguments);\n  }\n\n  console.log('getEnvCtx: Return env ctx...');\n  return cachedResult.ctx;\n};\n\nexport let _getEnvCtx = _.memoize(async function({ctx: {env}, tags}) {\n  // eslint-disable-next-line fp/no-arguments\n  let cacheKey = exports.getEnvCtxResolver(...arguments);\n  let s3 = new aws.S3({\n    region: env.AWS_REGION,\n    signatureVersion: 'v4'\n  });\n\n  let Body;\n  let ETag;\n\n  await _.consoleLogTime('_getEnvCtx: Fetching env ctx...', async function() {\n    let result = await s3.getObject({\n      Bucket: `config-${env.AWS_ACCOUNT_ID}-${env.PROJECT_DOMAIN_NAME}-${env.AWS_REGION}`,\n      Key: `${env.ENV_NAME}.json`,\n      IfMatch: (_.defaultTo(exports._getEnvCtx.oldCache[cacheKey], {})).etag\n    }).promise();\n\n    ({\n      Body,\n      ETag\n    } = result);\n  });\n  Body = JSON.parse(Body.toString());\n\n  let ctx = {};\n\n  console.log('_getEnvCtx: Merging env ctx...');\n  _.forEach(tags, function(tag) {\n    ctx = _.merge(ctx, _.defaultTo(Body[tag], {}));\n  });\n\n  return {\n    ctx,\n    etag: ETag,\n    lastFetched: Date.now()\n  };\n}, exports.getEnvCtxResolver);\n_getEnvCtx.oldCache = new _.memoize.Cache();\n\nexport let setupLogging = function({e, ctx}) {\n  let streams = [{\n    stream: process.stdout\n  }];\n\n  let [, slackUser] = ctx.env.ENV_NAME.match(/^git-(keep-)?([a-z]{3})(?:-.+)?$/) || [];\n\n  if (ctx.env.SLACK_WEBHOOK && slackUser) {\n    streams.push({\n      level: 'DEBUG',\n      stream: new BunyanSlack({\n        webhook_url: ctx.env.SLACK_WEBHOOK,\n        channel: `@${slackUser}`, // to\n        customFormatter: function(record, _levelName) {\n          let invokedFunctionArn = _.get(ctx, 'invokedFunctionArn', '');\n          let log = bunyanFormat(record, {\n            outputMode: 'long',\n            color: false\n          });\n\n          return {\n            text: [\n              '',\n              `*${ctx.env.ENV_NAME}*`,\n              `*${invokedFunctionArn}*`,\n              log\n            ].join('\\n')\n          };\n        }\n      })\n    });\n  }\n\n  let logger = bunyan.createLogger({\n    name: ctx.functionName,\n    level: _.get(ctx, 'env.LOG_LEVEL', 'INFO'),\n    serializers: bunyan.stdSerializers,\n    src: true,\n    req_id: ctx.awsRequestId,\n    streams\n  });\n  logger.resolveLevel = bunyan.resolveLevel;\n\n  logger.trace({e, ctx}, `Logger started. ${logger.level()}`);\n\n  ctx.log = logger;\n\n  if (ctx.log.level() <= ctx.log.resolveLevel('TRACE')) {\n    Error.stackTraceLimit = Infinity;\n    if (Promise.config) {\n      Promise.config({\n        warnings: true,\n        longStackTraces: true\n      });\n    }\n    ctx.log.trace('Long stack traces enabled');\n  } else if (Error.stackTraceLimit === Infinity && /^prod/.test(process.env.NODE_ENV)) {\n    ctx.log.error('Long stack traces cannot be disabled. New deployment is required!');\n  }\n\n  aws.config.logger = {\n    isTTY: false,\n    log: function(message) {\n      if (ctx.log.level() > ctx.log.resolveLevel('TRACE')) {\n        return;\n      }\n\n      let [\n        serviceIdentifier,\n        status,\n        delta,\n        retryCount,\n        operation,\n        params\n      ] = exports.awsLoggerRE.exec(message).slice(1);\n      params = eval(`(${params})`); // eslint-disable-line no-eval\n\n      ctx.log.trace({\n        aws: {\n          serviceIdentifier,\n          status,\n          delta,\n          retryCount,\n          operation,\n          params\n        }\n      }, 'Making an AWS SDK call.');\n    }\n  };\n};\n\nexport let getRequestInstance = function(req) {\n  let {ctx} = req;\n  return `${ctx.invokedFunctionArn}#request:${ctx.awsRequestId}`;\n};\n\nexport default bootstrap;\n"]}