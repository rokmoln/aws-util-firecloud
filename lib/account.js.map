{"version":3,"sources":["../src/account.js"],"names":[],"mappings":";;;;;;;AAAA;;;;AACA;;;;;;AAEO,IAAI,oBAAM,UAAS,EAAC,GAAD,EAAT,EAAgB;AAC/B,MAAI,mBAAmB,0BAAE,MAAF,CAAS,0BAAE,IAAF,CAAO,IAAI,CAAX,CAAT,EAAwB,UAAS,OAAT,EAAkB;AAC/D,WAAO,oBAAmB,IAAnB,CAAwB,OAAxB;AAAP;AACD,GAFsB,CAAvB;AAGA,MAAI,WAAW,EAAf;;AAEA,4BAAE,OAAF,CAAU,gBAAV,EAA4B,UAAS,eAAT,EAA0B;AACpD,QAAI,SAAS,0BAAE,OAAF,CAAU,eAAV,EAA2B,kBAA3B,EAA+C,EAA/C,CAAb;AACA,QAAI,OAAO,0BAAE,OAAF,CAAU,MAAV,CAAX;AACA,QAAI,KAAK,IAAI,eAAJ,CAAT;;AAEA,QAAI,UAAU;AACZ,UADY;AAEZ;AAFY,KAAd;;AAKA,QAAI,kBAAkB,0BAAE,MAAF,CAAS,IAAI,CAAb,EAAgB,UAAS,MAAT,EAAiB,GAAjB,EAAsB;AAC1D,aAAO,0BAAE,UAAF,CAAa,GAAb,EAAmB,GAAE,MAAO,GAA5B,CAAP;AACD,KAFqB,CAAtB;AAGA,sBAAkB,0BAAE,OAAF,CAAU,eAAV,EAA2B,UAAS,MAAT,EAAiB,GAAjB,EAAsB;AACjE,aAAO,0BAAE,OAAF,CAAU,GAAV,EAAe,IAAI,MAAJ,CAAY,IAAG,MAAO,GAAtB,CAAf,EAA0C,EAA1C,CAAP;AACD,KAFiB,CAAlB;AAGA,8BAAE,KAAF,CAAQ,OAAR,EAAiB,eAAjB;;AAEA,YAAQ,EAAR,GAAa,0BAAE,KAAF,CAAQ,0BAAE,SAAF,CAAY,QAAQ,EAApB,EAAwB,EAAxB,CAAR,EAAqC,GAArC,CAAb;;AAEA,aAAS,EAAT,IAAe,OAAf;AACA,aAAS,MAAT,IAAmB,OAAnB;AACA,aAAS,IAAT,IAAiB,OAAjB;AACD,GAvBD;;AAyBA,4BAAE,MAAF,CAAS,QAAT,EAAmB,SAAS,IAAI,cAAb,CAAnB;;AAEA,SAAO,QAAP;AACD,CAlCM;;AAoCA,IAAI,4BAAU,YAAI,EAAC,kBAAD,EAAJ,CAAd;;AAEP;AACO,IAAI,mDAAJ","file":"account.js","sourcesContent":["import _ from 'lodash-firecloud';\nimport env from './env';\n\nexport let get = function({env}) {\n  let awsAccountIdVars = _.filter(_.keys(env._), function(varName) {\n    return /_AWS_ACCOUNT_ID$/.test(varName);\n  });\n  let accounts = {};\n\n  _.forEach(awsAccountIdVars, function(awsAccountIdVar) {\n    let prefix = _.replace(awsAccountIdVar, /_AWS_ACCOUNT_ID$/, '');\n    let NAME = _.toLower(prefix);\n    let ID = env[awsAccountIdVar];\n\n    let account = {\n      NAME,\n      ID\n    };\n\n    let prefixedEnvVars = _.pickBy(env._, function(_value, key) {\n      return _.startsWith(key, `${prefix}_`);\n    });\n    prefixedEnvVars = _.mapKeys(prefixedEnvVars, function(_value, key) {\n      return _.replace(key, new RegExp(`^${prefix}_`), '');\n    });\n    _.merge(account, prefixedEnvVars);\n\n    account.NS = _.split(_.defaultTo(account.NS, ''), ',');\n\n    accounts[ID] = account;\n    accounts[prefix] = account;\n    accounts[NAME] = account;\n  });\n\n  _.assign(accounts, accounts[env.AWS_ACCOUNT_ID]);\n\n  return accounts;\n};\n\nexport let current = get({env});\n\n// backward compat alias\nexport let AWS_ACCOUNT = current;\n\nexport default current;\n"]}