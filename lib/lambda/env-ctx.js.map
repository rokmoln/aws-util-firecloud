{"version":3,"sources":["../../src/lambda/env-ctx.ts"],"names":[],"mappings":"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","file":"env-ctx.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\n\nimport _ from 'lodash-firecloud';\nimport aws from 'aws-sdk';\n\nimport {\n  LambdaContext,\n  LambdaEvent,\n  PackageJson\n} from '../types';\n\n/*\n  ctx = {\n    functionName: undefined,\n    functionVersion: undefined,\n    invokedFunctionArn: undefined,\n    memoryLimitInMB: undefined,\n    awsRequestId: undefined,\n    logGroupName: undefined,\n    logStreamName: undefined,\n    identity: {},\n    // From X-Amz-Client-Context (HTTP Request Header)\n    // For inspiration see\n    // http://docs.aws.amazon.com/mobileanalytics/latest/ug/PutEvents.html\n    clientContext: {},\n    // LAMBDA-HTTP CUSTOM\n    // e.stageVariables + process.env\n    env: {}\n  }\n\n  identity = {\n    cognitoIdentityPoolId: undefined,\n    accountId: undefined,\n    cognitoIdentityId: undefined,\n    caller: undefined,\n    apiKey: undefined,\n    sourceIp: undefined,\n    cognitoAuthenticationType: undefined,\n    cognitoAuthenticationProvider: undefined,\n    userArn: undefined,\n    userAgent: undefined,\n    user: undefined\n  }\n*/\n\nlet _getResolver = function({\n  ctx,\n  tags = [\n    'default'\n  ]\n}: {\n  ctx: LambdaContext;\n  tags: string[];\n}): string {\n  let {\n    env\n  } = ctx;\n\n  return _.join([\n    env.AWS_ACCOUNT_ID,\n    env.AWS_LAMBDA_FUNCTION_ALIAS,\n    env.AWS_LAMBDA_FUNCTION_NAME,\n    env.AWS_REGION,\n    env.ENV_NAME,\n    ...tags\n  ]);\n};\n\nlet _get = (function() {\n  let fn = async function({ctx, tags}: {\n    ctx: LambdaContext;\n    tags: string[];}\n  ): Promise<LambdaContext> {\n    let {\n      env\n    } = ctx;\n\n    let s3 = new aws.S3({\n      region: env.AWS_REGION,\n      signatureVersion: 'v4'\n    });\n\n    let Body: aws.S3.GetObjectOutput['Body'];\n\n    await ctx.log.trackTime('aws-util-firecloud.lambda._get: Fetching env ctx...', async function() {\n      let result = await s3.getObject({\n        Bucket: env.S3_CONFIG_BUCKET,\n        Key: `${env.ENV_NAME}.json`\n      }).promise();\n\n      ({\n        Body\n      } = result);\n    });\n    Body = JSON.parse(Body.toString());\n\n    let newCtx = {} as LambdaContext;\n    _.forEach(tags, function(tag) {\n      newCtx = _.merge(newCtx, _.defaultTo(Body[tag], {}));\n    });\n\n    return newCtx;\n  };\n\n  let memoizedFn = _.memoizeTtl(60 * 1000, fn, _getResolver);\n  return memoizedFn;\n})();\n\nlet _getAndRefresh = async function(...args: Parameters<typeof _getResolver>): Promise<LambdaContext> {\n  let cacheKey = _getResolver(...args);\n  if (_get.cache.has(cacheKey)) {\n    let {\n      value,\n      expires\n    } = _get.cache.get(cacheKey);\n\n    if (expires <= Date.now()) {\n      // schedule a refresh\n      _.defer(_.asyncCb(async function() {\n        await _get(...args);\n      }));\n    }\n\n    return value;\n  }\n\n  return await _get(...args);\n};\n\nexport let merge = async function({e, ctx, pkg}: {\n  e: LambdaEvent & {\n    stageVariables?: {\n      [key: string]: string;\n    };\n  };\n  ctx: LambdaContext;\n  pkg: PackageJson;\n}): Promise<void> {\n  let AWS_ACCOUNT_ID =\n      _.split(_.get(ctx, 'invokedFunctionArn', ''), ':')[4];\n  AWS_ACCOUNT_ID =\n    _.defaultTo(_.get(e, 'requestContext.accountId'), AWS_ACCOUNT_ID) as string;\n\n  let AWS_REGION =\n      _.split(_.get(ctx, 'invokedFunctionArn', ''), ':')[3];\n\n  let pkgNameRE = _.replace(pkg.name, /([.-])/, '\\\\$1');\n  let ENV_NAME =\n      _.split(_.get(ctx, 'invokedFunctionArn', ''), ':')[6];\n  ENV_NAME = _.replace(ENV_NAME, new RegExp(`\\\\-${pkgNameRE}$`), '');\n\n  let AWS_LAMBDA_FUNCTION_NAME =\n      _.split(_.get(ctx, 'invokedFunctionArn', ''), ':')[6];\n\n  let AWS_LAMBDA_FUNCTION_ALIAS =\n      _.split(_.get(ctx, 'invokedFunctionArn', ''), ':')[7];\n  AWS_LAMBDA_FUNCTION_ALIAS = _.defaultTo(AWS_LAMBDA_FUNCTION_ALIAS, '$LATEST');\n\n  _.defaultsDeep(ctx, {\n    env: e.stageVariables\n  }, {\n    env: {\n      AWS_ACCOUNT_ID,\n      AWS_LAMBDA_FUNCTION_ALIAS,\n      AWS_LAMBDA_FUNCTION_NAME,\n      AWS_REGION,\n      ENV_NAME\n    }\n  }, {\n    env: e.stageVariables\n  }, {\n    env: {\n      // AWS does not allow empty-string stage variables...\n      API_BASE_PATH: '',\n      API_SECONDARY_BASE_PATH: ''\n    }\n  }, {\n    env: process.env\n  });\n\n  let envCtx = await _getAndRefresh({\n    ctx,\n    tags: [\n      'lambdas',\n      `lambdas/${pkg.name}`\n    ]\n  });\n  _.defaultsDeep(ctx, envCtx);\n};\n"]}